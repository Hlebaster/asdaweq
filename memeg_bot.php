<?php

include 'db.php';

ini_set('error_log', 'bot.log');
ini_set('log_errors', 'On');
error_reporting(E_ALL);

// constants
define('TOKEN', '6995106650:AAF1OW7BA2RDWEywA3g0U8a1x4BRqNIp8EE');
$bot_token = '6995106650:AAF1OW7BA2RDWEywA3g0U8a1x4BRqNIp8EE';
$admins = array('5581608237', '568506833');
$chenal_id = '-1002096846403';
$key = '0JXQtNGW0Log0L/QtdC00ZbQuj8g0KfQuCDQvdC1Pw==';
$api_url = 'https://api.telegram.org/bot' . $bot_token . '/';

$input_data = json_decode(file_get_contents('php://input'), true);
//write to log
file_put_contents('log.txt', print_r($input_data, true) . PHP_EOL, FILE_APPEND);

function send_message($user_id, $message, $menu , $headers = [])
{
    if($menu == null)
    {
        $data = [
            'chat_id' => $user_id,
            'text' => $message,
        ];
    }
    else
    {
        $data = [
            'chat_id' => $user_id,
            'text' => $message,
            'reply_markup' => json_encode($menu),
        ];
    }
    $curl = curl_init();
    curl_setopt_array($curl, [
        CURLOPT_POST => 1,
        CURLOPT_HEADER => 0,
        CURLOPT_RETURNTRANSFER => 1,
        CURLOPT_URL => 'https://api.telegram.org/bot' . TOKEN . '/' . "sendMessage",
        CURLOPT_POSTFIELDS => json_encode($data),
        CURLOPT_HTTPHEADER => array_merge(array("Content-Type: application/json"), $headers)
    ]);   
    
    $result = curl_exec($curl);
    curl_close($curl);
    return (json_decode($result, 1) ? json_decode($result, 1) : $result);
}

if(isset($input_data['message'])) {
    $message_data = $input_data['message'];
    $chat_id = isset($message_data['chat']['id']) ? $message_data['chat']['id'] : null;                    
    $user_id = isset($message_data['from']['id']) ? $message_data['from']['id'] : null;                    
    $username = isset($message_data['from']['username']) ? $message_data['from']['username'] : null;              
    $first_name = isset($message_data['chat']['first_name']) ? $message_data['chat']['first_name'] : null;            
    $last_name = isset($message_data['chat']['last_name']) ? $message_data['chat']['last_name'] : null;             
    $chat_time = isset($message_data['date']) ? $message_data['date'] : null;                          
    $message = isset($message_data['text']) ? $message_data['text'] : null;                          
    $msg = $message ? mb_strtolower($message, "utf8") : null;   
} else {
    $chat_id = null;
    $user_id = null;
    $username = null;
    $first_name = null;
    $last_name = null;
    $chat_time = null;
    $message = null;
    $msg = null;
}

if(isset($input_data["callback_query"])) {
    $callback_query = $input_data["callback_query"];                           
    $data = isset($callback_query['data']) ? $callback_query['data'] : null;                              
    $message_id = isset($callback_query['message']['message_id']) ? $callback_query['message']['message_id'] : null;             
    $chat_id_in = isset($callback_query['message']['chat']['id']) ? $callback_query['message']['chat']['id'] : null;      
    $callback_query_user_id = isset($callback_query['from']['id']) ? $callback_query['from']['id'] : null; 
} else {
    $data = null;
    $message_id = null;
    $chat_id_in = null;
}
      


$admin_menu = [
    'inline_keyboard' => [
        [
            [
                'text' => 'ü§∑‚Äç‚ôÇÔ∏è–û—á–µ—Ä–µ–¥—å', 
                'callback_data' => 'current_queue'
            ],
            [ 
                'text' => 'üôå–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞', 
                'callback_data' => 'server_status'
            ],
        ],
        [
            ['text' => 'üåü–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ—Ü —Å–µ—Ç–∏', 'callback_data' => 'social_stats'],
            ['text' => 'üê£–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–¥–º–∏–Ω—ã', 'callback_data' => 'admin_stats'],
        ],
    ]
];

function is_admin_standart($user_id)
{
    global $admins;
    return in_array($user_id, $admins);
}

function is_admin_calbek($user_id)
{
    global $admins;
    return in_array($user_id, $admins);
}



// check url type (instagram, youtube, tiktok)
function url_type($url)
{
    if ($url === null || $url === '') {
        return 'unknown';
    }
    
    if (strpos($url, 'instagram') !== false) {
        return 'INSTA_DEBILUS';
    } elseif (strpos($url, 'youtube') !== false) {
        return 'YOUTUBE_DEBILUS';
    } elseif (strpos($url, 'tiktok') !== false) {
        return 'TIKTOK_DEBILUS';
    } else {
        return 'unknown';
    }
}
if (is_admin_standart($user_id) || is_admin_calbek($callback_query_user_id)){

    switch ($msg){
        case '/start':
            send_message($chat_id, "–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!\n\n –Ø–∫ –∫–∞–∑–∞–≤ –æ–¥–∏–Ω —Ñ—ñ–ª–æ—Å–æ—ñ—Ñ –Ω–æ–≤–∏–π –¥–µ–Ω—å –Ω–æ–≤–∏–π –ï–¥—ñ–∫", $admin_menu);
            break;
        case '/help':
            send_message($chat_id, "–ö–∞–∫–æ–π —Ö–µ–ª–ø —Ç—ã —à–æ –¥–µ—Ü–ª?", $admin_menu);
            break;
        default:
            $url = url_type($message);
            if($url == 'unknown'){
                break;
            }
            send_message($chat_id, "–û–±–Ω–∞—Ä—É–∂–µ–Ω " . $url. "\n–î–æ–±–∞–≤–ª—è—é –≤ –æ—á–µ—Ä–µ–¥—å", $admin_menu);
            add_task_to_queue($message, $url, $user_id);
            break;
    }

    switch ($data){
        case 'current_queue':
            $queue_count = get_queue_count();
            $queue = get_queue();
            $message = "–û—á–µ—Ä–µ–¥—å: " . $queue_count . "\n\n";
            if (!empty($queue)) {
                foreach ($queue as $task) {
                    $message .= "URL: " . $task['url'] . "\n";
                    $message .= "–¢–∏–ø URL: " . $task['url_type'] . "\n";
                    $message .= "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π: " . $task['responsible'] . "\n";
                    $message .= "–°—Ç–∞—Ç—É—Å: " . $task['status'] . "\n\n";
                }
            } else {
                $message .= "–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞.";
            }
            // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            send_message($chat_id_in, $message, null);
            break;        
        case 'server_status':
            $servers_status = servers_status();
            $message = "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–æ–≤: \n\n";
            if (!empty($servers_status)) {
                foreach ($servers_status as $server) {
                    $message .= "–°–µ—Ä–≤–µ—Ä: " . $server['name'] . "\n";
                    $message .= "–°—Ç–∞—Ç—É—Å: " . $server['status'] . "\n\n";
                }
            } else {
                $message .= "–°–µ—Ä–≤–µ—Ä–∞ –≤ –∂–æ–ø–µ.";
            }
            send_message($chat_id_in, $message, null);
            break;
        case 'social_stats':
            $get_servers_status = servers_status();
            $status = "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–æ–≤: \n\n";
            $social_statistik = false; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞—Ç—É—Å–µ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        
            if (!empty($get_servers_status)) {
                foreach ($get_servers_status as $server) {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ –∏ –∑–∞–¥–∞—á–∏
                    if ($server['status'] === 'online' && $server['task'] === 'free') {
                        $social_statistik = true; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Ü–∏–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ true, –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–µ—Ä–≤–µ—Ä –æ–Ω–ª–∞–π–Ω –∏ –∑–∞–¥–∞—á–∞ —Å–≤–æ–±–æ–¥–Ω–∞
                    }
                    $status .= "–°–µ—Ä–≤–µ—Ä: " . $server['name'] . "\n";
                    $status .= "–°—Ç–∞—Ç—É—Å: " . $server['status'] . "\n";
                    $status .= "–ó–∞–¥–∞—á–∞: " . $server['task'] . "\n\n";
                }
            } else {
                $status .= "–°–µ—Ä–≤–µ—Ä–∞ –≤ –∂–æ–ø–µ.";
            }
        
            if ($social_statistik) {
                // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä —Å —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
                send_message($chat_id_in, "–°–µ—Ä–≤–µ—Ä –Ω–∞—á–∞–ª —Å–æ–±–∏—Ä–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–∂–∏–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.", null);
            } else {
                // –ï—Å–ª–∏ –≤—Å–µ —Å–µ—Ä–≤–µ—Ä—ã –∑–∞–Ω—è—Ç—ã –∏–ª–∏ –æ—Ñ–ª–∞–π–Ω
                send_message($chat_id_in, "–í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã –∑–∞–Ω—è—Ç—ã –∏–ª–∏ –æ—Ñ–ª–∞–π–Ω. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", null);
            }
            break;
        case 'admin_stats':
            // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –∞–¥–º–∏–Ω–æ–≤
            $admin_stats = get_admin_stats();
        
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ
            if ($admin_stats) {
                // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –∞–¥–º–∏–Ω–æ–≤
                $message = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–¥–º–∏–Ω–æ–≤:\n";
                foreach ($admin_stats as $admin) {
                    $message .= "ID: " . $admin['tg_id'] . "\n";
                    $message .= "–í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: " . $admin['total_posts'] . "\n";
                    $message .= "ID —Å–∞–º–æ–≥–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ–≥–æ –ø–æ—Å—Ç–∞: " . $admin['id_most_popular'] . "\n\n";
                }
            } else {
                $message = "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω–æ–≤.";
            }
        
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –∞–¥–º–∏–Ω–æ–≤
            send_message($chat_id_in, $message, null);
            break;
        case null:
            send_message($chat_id_in, "–û—à–∏–±–∫–∞ –∫–∞–ª–±–µ–∫–∫–∞", null);
            break;
        default:
            send_message($chat_id_in, "–û—à–∏–±–∫–∞ –∫–∞–ª–±–µ–∫–∫–∞", null);
            break;
    }

}else{
    send_message($chat_id, "–¢—ã –Ω–µ –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö?", null);
}

?>
